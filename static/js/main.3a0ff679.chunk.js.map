{"version":3,"sources":["componentsUser/User.js","componentsFriends/FriendList.js","componentsStatistics/Statistics.js","App.js","index.js"],"names":["User","avatar","name","tag","location","statsFollowers","statsViews","statsLikes","src","alt","FriendList","items","map","id","isOnLine","className","width","defaultProps","StatList","stats","title","class","label","percentage","App","user","followers","views","likes","friends","statisticalData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ibAEe,SAASA,EAAT,GAQX,IAPFC,EAOC,EAPDA,OAOC,IANDC,YAMC,MANM,gEAMN,EALDC,EAKC,EALDA,IACAC,EAIC,EAJDA,SACAC,EAGC,EAHDA,eACAC,EAEC,EAFDA,WACAC,EACC,EADDA,WAIE,OAEF,gCACE,gCACE,qBACEC,IAAKP,EACLQ,IAAKP,IAEP,4BAAKA,IACL,kCAAMC,KACN,4BAAKC,OAGP,+BACE,+BACE,6CACA,+BAAQC,OAEV,+BACE,yCACA,+BAAQC,OAEV,+BACE,yCACA,+BAAQC,a,WCnCD,SAASG,EAAT,GAA8B,IAATC,EAAQ,EAARA,MAEjC,OAAO,6BACDA,EAAMC,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,SAAUb,EAAhB,EAAgBA,OAAQC,EAAxB,EAAwBA,KAAxB,OACP,+BACA,sBAAMa,UAAWD,EAAW,gBAAkB,mBAC9C,qBAAKN,IAAKP,EAAQQ,IAAKP,EAAMc,MAAM,OACnC,4BAAId,MAHKW,QASrBH,EAAWO,aAAe,CACtBf,KAAM,W,WCdK,SAASgB,EAAT,GAAkC,IAAfC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,MACzC,OAAQ,0BAASC,MAAM,aAAf,UACR,oBAAIA,MAAM,QAAV,SAAmBD,GAAS,iBAC3B,6BACAD,EAAMP,KAAI,YAA8B,IAA5BC,EAA2B,EAA3BA,GAAIS,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,WACpB,OACA,qBAAaF,MAAM,OAAnB,UACA,sBAAMA,MAAM,QAAZ,SAAqBC,IACrB,sBAAMD,MAAM,aAAZ,SAA0BE,MAFjBV,WCEE,SAASW,IACtB,IAAOvB,EAAsCwB,EAAtCxB,OAAQC,EAA8BuB,EAA9BvB,KAAMC,EAAwBsB,EAAxBtB,IAAKC,EAAmBqB,EAAnBrB,SAAUe,EAASM,EAATN,MACpC,OACE,qCACD,cAACnB,EAAD,CAEHC,OAAQA,EACRC,KAAMA,EACNC,IAAKA,EACLC,SAAUA,EACVC,eAAgBc,EAAMO,UACtBpB,WAAYa,EAAMQ,MAClBpB,WAAYY,EAAMS,QAGlB,cAAClB,EAAD,CAAYC,MAAOkB,IAEnB,cAACX,EAAD,CAAUE,OAAK,EAACD,MAAOW,OCpBvBC,IAASC,OAAO,cAAC,IAAMC,WAAP,UACd,cAACT,EAAD,MAEDU,SAASC,eAAe,U","file":"static/js/main.3a0ff679.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nexport default function User ({\r\n  avatar,\r\n  name = 'не известно', \r\n  tag, \r\n  location, \r\n  statsFollowers,\r\n  statsViews,\r\n  statsLikes\r\n}) {\r\n    \r\n   // console.log(props);\r\n    return (\r\n\r\n  <div>\r\n    <div>\r\n      <img\r\n        src={avatar}\r\n        alt={name}\r\n      />\r\n      <p >{name}</p>\r\n      <p >@{tag}</p>\r\n      <p >{location}</p>\r\n    </div>\r\n  \r\n    <ul >\r\n      <li>\r\n        <span >Followers</span>\r\n        <span >{statsFollowers}</span>\r\n      </li>\r\n      <li>\r\n        <span >Views</span>\r\n        <span >{statsViews}</span>\r\n      </li>\r\n      <li>\r\n        <span >Likes</span>\r\n        <span >{statsLikes}</span>\r\n      </li>\r\n    </ul>\r\n    </div>\r\n      )};\r\n \r\n\r\n  User.propTypes = {\r\n    avatar: PropTypes.string,\r\n    name: PropTypes.string,\r\n    tag:PropTypes.string,\r\n    location:PropTypes.string,\r\n    statsFollowers:PropTypes.number,\r\n    statsViews:PropTypes.number,\r\n    statsLikes:PropTypes.number,\r\n  }","import PropTypes from 'prop-types';\r\n\r\nexport default function FriendList({items}) {\r\n    //const isOnLine = true;\r\n   return <ul>\r\n        {items.map(({id, isOnLine, avatar, name}) =>(\r\n            <li key={id}>\r\n            <span className={isOnLine ? 'status-online' : 'status-offline'}></span>\r\n            <img src={avatar} alt={name} width=\"48\" />\r\n            <p>{name}</p>\r\n          </li>\r\n        ))}\r\n    </ul>\r\n};\r\n\r\nFriendList.defaultProps = {\r\n    name: 'no name',\r\n}\r\n\r\nFriendList.propTypes = {\r\n    status: PropTypes.bool,\r\n    avatar: PropTypes.string,\r\n    name: PropTypes.string,\r\n    id:PropTypes.number,\r\n}","import PropTypes from 'prop-types';\r\n\r\nexport default function StatList({stats, title}){\r\nreturn (<section class=\"statistics\">\r\n<h2 class=\"title\">{title && 'Upload stats'}</h2>\r\n <ul>\r\n{stats.map(({id, label, percentage}) => {\r\n    return (\r\n    <li key={id} class=\"item\">\r\n    <span class=\"label\">{label}</span>\r\n    <span class=\"percentage\">{percentage}</span>\r\n  </li>    \r\n    ) \r\n} \r\n)} \r\n</ul>\r\n</section>\r\n)};\r\n\r\nStatList.propTypes = {\r\n    title:PropTypes.bool,\r\n    stats:PropTypes.arrayOf(PropTypes.object),\r\n}","import user from './user.json';\nimport User from './componentsUser/User';\n\nimport friends from './friends.json';\nimport FriendList from './componentsFriends/FriendList';\n\nimport statisticalData from './statistical-data.json';\nimport StatList from './componentsStatistics/Statistics';\n\n\nexport default function App() {\n  const {avatar, name, tag, location, stats} = user;\n  return(\n    <> \n   <User \n\navatar={avatar} \nname={name}\ntag={tag}\nlocation={location}\nstatsFollowers={stats.followers}\nstatsViews={stats.views}\nstatsLikes={stats.likes}\n  /> \n   \n<FriendList items={friends} />\n\n<StatList title stats={statisticalData} />\n\n   </>\n  )\n    \n \n  \n  \n    \n  \n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\n\nReactDOM.render(<React.StrictMode>\n  <App />\n</React.StrictMode>,\n document.getElementById('root'));\n\n"],"sourceRoot":""}